@{
    ViewBag.Title = "Title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head runat="server">
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" type="text/javascript"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDz_qxllhGeL9ZGB7kNBoXaOj0IVYNB1Sw&callback=initMap&libraries=places&v=weekly"
            defer></script>
    <script type="module" src="./index.js"></script>

    <link href="https://maps/documentation/javascript/examples/default.css" rel="stylesheet" />
    <title>EventHub</title>
    <script>
        let map, infoWindow;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 43.6631872, lng: -79.3811385 },
                zoom: 13
            });
            var input = document.getElementById('searchInput');
            //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29)
            });

            autocomplete.addListener('place_changed', function () {
                infowindow.close();
                marker.setVisible(false);
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                // If the place has a geometry, then present it on a map./
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }
                marker.setIcon(({
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(35, 35)
                }));
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);

                var address = '';
                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }

                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                infowindow.open(map, marker);

                // Location details
                for (var i = 0; i < place.address_components.length; i++) {
                    if (place.address_components[i].types[0] == 'postal_code') {
                        document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;
                    }
                    if (place.address_components[i].types[0] == 'country') {
                        document.getElementById('country').innerHTML = place.address_components[i].long_name;
                    }
                }
                document.getElementById('location').innerHTML = place.formatted_address;
                document.getElementById('lat').innerHTML = place.geometry.location.lat();
                document.getElementById('lon').innerHTML = place.geometry.location.lng();
            });

            var locationButton = document.createElement("button");

            locationButton.textContent = "Pan to Current Location";
            locationButton.classList.add("custom-map-control-button");
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
            locationButton.addEventListener("click", () => {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };

                            infowindow.setPosition(pos);
                            infowindow.setContent("Location found.");
                            infowindow.open(map);
                            map.setCenter(pos);
                            console.log(pos)
                        },
                        () => {
                            handleLocationError(true, infowindow, map.getCenter());
                        }
                    );
                } else {
                    handleLocationError(false, infowindow, map.getCenter());
                }
            });
        }

        function handleLocationError(browserHasGeolocation, infowindow, pos) {
            infowindow.setPosition(pos);
            infowindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
            infowindow.open(map);
        }
        window.initMap = initMap;


        //Ticketmaster API


          $.ajax({
              type:"GET",
              url:"https://app.ticketmaster.com/discovery/v2/events.json?&apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&city=Toronto",
              async:true,
              dataType: "json",
              success: function(json) {
                          console.log(json._embedded.events[0]);
                          console.log(json._embedded.events[0].name);
                          
                document.getElementById('ticketmasterName').innerHTML = json._embedded.events[0].name;
                 document.getElementById('ticketmasterDate').innerHTML = json._embedded.events[0].dates.start.localDate;
                  document.getElementById('ticketmasterTime').innerHTML = json._embedded.events[0].dates.start.localTime;
                   document.getElementById('ticketmasterPriceMin').innerHTML = json._embedded.events[0].priceRanges[0].min;
                    document.getElementById('ticketmasterPriceMax').innerHTML = json._embedded.events[0].priceRanges[0].max;
                    document.getElementById('ticketmasterPriceCurrency').innerHTML = json._embedded.events[0].priceRanges[0].currency;
                  document.getElementById('ticketmasterURL').href = json._embedded.events[0].url;
                         
                          // Parse the response.
                          // Do other things.
                       },
              error: function(xhr, status, err) {
                          // This time, we do not end up here!
                       }
        });

    </script>
</head>
<body>
    <div class="app">
        <div class="map-wrapper">
            <!-- Search input -->
            <div class="search-wrapper">
                <label class="address" for="address">Search Vanue:</label>
                <input id="searchInput" class="controls" type="text" placeholder="Enter a location">
            </div>
            <!-- Google map -->
            <div>
                <span id="map"></span>
            </div>
            
        </div>
            <!-- Display geolocation data -->
        <div>
            <ul class="geo-data">
                <li>Full Addres: <span id="location"></span></li>
                <li>Postal Code: <span id="postal_code"></span></li>
                <li>Country: <span id="country"></span></li>
                <li>Latitude: <span id="lat"></span></li>
                <li>Longitude: <span id="lon"></span></li>
            </ul>
        </div>
    </div>

    <!--  <h1>Current Event</h1>
     <p id="location">location there</p>
     <h2>input your city and check out the list of suggested things!</h2>

     <form id="form1" runat="server" name="address" method="GET">

    <label for="address">Search Your City</label>
    <input id="txt_location" name="address" type="text" runat="server" />
    <input type="button" value="Search" onclick="getmap()" class="btn btn-secondary btn-lg" />
    <div id="map_populate" style="width:100%; height:500px; border: 5px solid #5E5454;"></div>
    </form>-->

       <!--TicketMaster data-->
    <div class="ticketmaster">
        <p id="ticketmasterName"></p>
        <p id="ticketmasterDate"></p>
         <p id="ticketmasterTime"></p>
         <p>$<span id="ticketmasterPriceMin"></span> to $<span id="ticketmasterPriceMax"></span> <span id="ticketmasterPriceCurrency"></span></p>
        <a id="ticketmasterURL" href="#" target="_blank">this is a link</a>
    </div>

</body>
</html>

@section Styles
{
    <style type="text/css">
        #map {
            display: block;
            position: absolute;
            height: 60%;
           /*width: 100%;*/
            left: 2em;
            right: 2em;
        }

        #events {
            display: none;
        }
        /* * Optional: Makes the sample page fill the window */
        html, body {
            height: 100%;
            margin: 1em;
            padding: 1em;
        }


        /******** SEARCH BAR **********/

        .search-wrapper{
            text-align:center;
        }

        .address {
            font-size: 22px;
            font-weight: bolder;
        }

        #searchInput {
            position: relative !important;
            width: 16em;
            height: 2em;
            margin-bottom: 2em;
        }

        .container {
            height: 100%;
        }


        /*********** CURREN LOCATION BUTTON(google inner class) ***********/
        .custom-map-control-button {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            height: 40px;
            cursor: pointer;
        }


        .custom-map-control-button:hover {
            background: rgb(235, 235, 235);
        }


        .custom-map-control-button:hover {
            background: rgb(235, 235, 235);
        }

       
        .ticketmaster{
            margin-top:500px;
        }

    </style>
}