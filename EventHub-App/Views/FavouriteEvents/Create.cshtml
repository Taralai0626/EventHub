@model EventHub_App.Models.FavouriteEvent

@{
    ViewData["Title"] = "Create";
}

<!DOCTYPE html>
<html lang="en">
<head runat="server">
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" type="text/javascript"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDz_qxllhGeL9ZGB7kNBoXaOj0IVYNB1Sw&callback=initMap&libraries=places&v=weekly"
            defer></script>
            <script src="https://kit.fontawesome.com/e67acba296.js" crossorigin="anonymous"></script>
    <script type="module" src="./index.js"></script>

    <link href="https://maps/documentation/javascript/examples/default.css" rel="stylesheet" />
    <title>EventHub</title>

    <script>//var objForMap = [];


        let map, infoWindow;
        var eventPin = [];
      
                            
      

        function initMap() {
       


            var outputLat = 43.6532260;
            var outputLon = -79.3831843;

            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 43.6631872, lng: -79.3811385 }, /*default location*/
                zoom: 13
            });
            setMarkers(map); /* to set markers */
        }


        function setMarkers(map) {
            // Adds markers to the map.
            // Marker sizes are expressed as a Size of X,Y where the origin of the image
            // (0,0) is located in the top left of the image.
            // Origins, anchor positions and coordinates of the marker increase in the X
            // direction to the right and in the Y direction down.

            var image = {
                url: "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",
                /* This marker is 20 pixels wide by 32 pixels high.*/
                size: new google.maps.Size(20, 32),
                /* The origin for this image is (0, 0). */
                origin: new google.maps.Point(0, 0),
                /* The anchor for this image is the base of the flagpole at (0, 32). */
                anchor: new google.maps.Point(0, 32),
            };


            /* one marker testing (IT'S WORKING) keep it for testing */
            /*var image =
                "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png";
            var beachMarker = new google.maps.Marker({
                position: { lat: 43.663, lng: -79.381 },

                map,
                icon: image,
            });*/

            /* for search bar and auto complete address function */
            var input = document.getElementById('searchInput');
            //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29)
            });

            autocomplete.addListener('place_changed', function () {
                infowindow.close();
                marker.setVisible(false);
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                /*  If the place has a geometry, then present it on a map */
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport)
                    map.setZoom(12);

                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }
                marker.setIcon(({
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(35, 35)
                }));
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);

                var address = '';

                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }

                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                infowindow.open(map, marker);



                /* Location details */
                for (var i = 0; i < place.address_components.length; i++) {
                    if (place.address_components[i].types[0] == 'postal_code') {

                        document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;

                    }
                    if (place.address_components[i].types[0] == 'country') {
                        document.getElementById('country').innerHTML = place.address_components[i].long_name;
                    }
                }

                //console.log(outputLat);

                document.getElementById('location').innerHTML = place.formatted_address;
                document.getElementById('lat').innerHTML = place.geometry.location.lat();
                document.getElementById('lon').innerHTML = place.geometry.location.lng();

                outputLat = place.geometry.location.lat();
                outputLon = place.geometry.location.lng();

                /*=====TICKETMASTER API (new Tody event)===== */

                /*console.log(eventContainer); */
                var eventContainer = document.getElementById('eventContainer');
                var date = new Date();
                let today = date.toISOString().slice(0, 10);

                var followingDay = new Date(date.getTime() + 86400000); //add one day

                let tomrrow = followingDay.toISOString().slice(0, 10);

                $.ajax({
                    type: "GET",
                    url: "https://app.ticketmaster.com/discovery/v2/events?apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&size=10&radius=30&unit=km&latlong=" + outputLat + "," + outputLon + "&localStartEndDateTime=" + today + "T00:00:00," + tomrrow + "T00:00:00",
                    async: true,
                    dataType: "json",
                    success: function (json) {
                        eventContainer.innerHTML = '';
                        console.log(json);

                        var array1 = json._embedded.events;

 //make each events as an individual object

                    array1.forEach((element) => {

                        //push element.name into array
                        var individualArray = [element.name, parseFloat(element._embedded.venues[0].location.latitude), parseFloat(element._embedded.venues[0].location.longitude)];
                        eventPin.push(individualArray);


                        //get lat and lon for map pins
                        console.log("each event lat is: " + element._embedded.venues[0].location.latitude + " and lon is: " + element._embedded.venues[0].location.longitude);

                        //create element
                        var node = document.createElement("li");
                        var eventNameContainer = document.createElement("h3");
                        var eventDateContainer = document.createElement("p");
                        var eventStartTimeContainer = document.createElement("p");

                        var priceContainer = document.createElement("p");
                        var eventPriceMinContainer = document.createElement("span");
                        var eventPriceMaxContainer = document.createElement("span");
                        var eventPriceCurrencyContainer = document.createElement("span");


                        var eventUrlContainer = document.createElement("p");
                        var eventVenueAddressContainer = document.createElement("p");
                        var eventVenueNameContainer = document.createElement("p");

                        var eventName = document.createTextNode(element.name);
                        var eventDate = document.createTextNode(element.dates.start.localDate);
                        var eventStartTime = document.createTextNode(element.dates.start.localTime);
                        var eventPriceMin = document.createTextNode(element.priceRanges[0].min);
                        var eventPriceMax = document.createTextNode(element.priceRanges[0].max);
                        var eventPriceCurrency = document.createTextNode(element.priceRanges[0].currency);
                        var eventUrl = document.createTextNode(element.url);
                        var eventVenueAddress = document.createTextNode(element._embedded.venues[0].address.line1);
                        var eventVenueName = document.createTextNode(element._embedded.venues[0].name);
                        var eventImage = document.createTextNode(element.images[0].url);
                        console.log("image" + eventImage)

                        //add CSS to element
                         node.classList.add("listingLi");
                         eventDateContainer.classList.add("listingDate");
                         eventStartTimeContainer.classList.add("listingTime");
                         eventVenueAddressContainer.classList.add("listingVenueAddress");
                         eventVenueNameContainer.classList.add("listingVenueName");

                         priceContainer.classList.add("listingPriceContainer");
                         eventPriceMaxContainer.classList.add("listingPriceMax");
                         eventPriceCurrencyContainer.classList.add("listingPriceCurrency");

                         
                        // append element into container

                        eventNameContainer.appendChild(eventName)
                        eventDateContainer.appendChild(eventDate);
                        eventStartTimeContainer.appendChild(eventStartTime);

                        eventPriceMinContainer.appendChild(eventPriceMin);
                        eventPriceMaxContainer.appendChild(eventPriceMax);
                        eventPriceCurrencyContainer.appendChild(eventPriceCurrency);

                        priceContainer.appendChild(eventPriceMinContainer);
                        priceContainer.appendChild(eventPriceMaxContainer);
                        priceContainer.appendChild(eventPriceCurrencyContainer);

                        eventUrlContainer.appendChild(eventUrl);
                        eventVenueAddressContainer.appendChild(eventVenueAddress);
                        eventVenueNameContainer.appendChild(eventVenueName);

                        /* create buttons */
                            var btn = document.createElement("button");
                            btn.innerHTML = '<i class="fa-regular fa-heart fa-xl" style="color:red;"></i>';
                            btn.classList.add("addBtn");
                            btn.onclick = function () {
                               btn.innerHTML = '<i class="fa-solid fa-heart fa-xl" style="color:red;"></i>';
                             
                           // alert("Name: " + eventNameContainer.innerHTML + "Date: " + eventDateContainer.innerHTML + "Time: " + eventStartTimeContainer.innerHTML);
                  
                                document.getElementById("FavouriteEventName").value = eventNameContainer.innerHTML;
                                document.getElementById("FavouriteEventDate").value = eventDateContainer.innerHTML;
                                document.getElementById("FavouriteEventTime").value = eventStartTimeContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMin").value = eventPriceMinContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMax").value = eventPriceMaxContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceCurrency").value = eventPriceCurrencyContainer.innerHTML;
                                document.getElementById("FavouriteEventUrl").value = eventUrlContainer.innerHTML;
                                document.getElementById("FavouriteEventVenue").value = priceContainer.innerHTML;
                                var auto_refresh = setInterval(function() { submitform(); }, 2000);

                        };

                        //append element into node(li)
                        node.appendChild(eventNameContainer);
                        node.appendChild(eventDateContainer);
                        node.appendChild(eventStartTimeContainer);
                       
                  
                        node.appendChild(priceContainer);
                        node.appendChild(eventVenueAddressContainer);
                        node.appendChild(eventVenueNameContainer);
                        
                          node.appendChild(eventUrlContainer);
                        node.appendChild(btn);


                        /****** insert li to ul(eventContainer) ******/
                        eventContainer.appendChild(node);



                            /******  Get the obeject to string for infowindow ******/
                            const getEventName = JSON.stringify(element.name).replace(/"/g, '');
                            const getEventVanue = JSON.stringify(element._embedded.venues[0].name).replace(/"/g, '');
                            const geteventDate = JSON.stringify(element.dates.start.localDate).replace(/"/g, '');
                            const getEventTime = JSON.stringify(element.dates.start.localTime).replace(/"/g, '');
                            const getEventAddress = JSON.stringify(element._embedded.venues[0].address.line1).replace(/"/g, '');
                            const getEventImage = JSON.stringify(element.images[0].url).replace(/"/g, '');


                            var contentString = '<img src="' + getEventImage + '" width="100%"/>' + '<br><strong>' + getEventName + '</strong><br>' + getEventVanue + '<br>' + getEventAddress + '<br>' + geteventDate + ' ' + getEventTime 

                            // Shapes define the clickable region of the icon. The type defines an HTML
                            // <area> element 'poly' which traces out a polygon as a series of X,Y points.
                            // The final coordinate closes the poly by connecting to the first coordinate.


                            var shape = {
                                coords: [1, 1, 1, 20, 18, 20, 18, 1],
                                type: "poly",
                            };

                            var event = individualArray;
                            //var infowindow = new google.maps.InfoWindow({
                            //    content: contentString,
                            //    maxWidth: 200,
                            //});



                            var eventMarker = new google.maps.Marker({
                                position: { lat: event[1], lng: event[2] },
                                map: map,
                                icon: image,
                                shape: shape,
                                //title: event[0],
                                //zIndex: event[3],
                            });
                            /****** Marker listener to open info window ******/
                            eventMarker.addListener("click", function () {
                                infowindow.close();
                                infowindow.setContent(contentString);
                                infowindow.open({
                                    anchor: eventMarker,
                                    map: map,
                                    shouldFocus: false,
                                });
                            });

                        });
                    },
                    error: function (xhr, status, err) {
                        /* This time, we do not end up here!*/
                    }
                });
                /*=====TICKETMASTER API (This week event)===== */

                /*console.log(eventContainer2); */
                var eventContainer2 = document.getElementById('eventContainer2');
                var date2 = new Date();
                let today2 = date2.toISOString().slice(0, 10);
                var addOneWeek = new Date(date2.getTime() + 604800000); //add 30 days
                let eventInAWeek = addOneWeek.toISOString().slice(0, 10);


                $.ajax({
                    type: "GET",
                    url: "https://app.ticketmaster.com/discovery/v2/events?apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&size=10&radius=30&unit=km&latlong=" + outputLat + "," + outputLon + "&localStartEndDateTime=" + today2 + "T00:00:00," + eventInAWeek + "T00:00:00",
                    async: true,
                    dataType: "json",
                    success: function (json) {
                        eventContainer2.innerHTML = '';


                        var array1 = json._embedded.events;

                         //make each events as an individual object

                    array1.forEach((element) => {

                        //push element.name into array
                        var individualArray = [element.name, parseFloat(element._embedded.venues[0].location.latitude), parseFloat(element._embedded.venues[0].location.longitude)];
                        eventPin.push(individualArray);


                        //get lat and lon for map pins
                        console.log("each event lat is: " + element._embedded.venues[0].location.latitude + " and lon is: " + element._embedded.venues[0].location.longitude);

                        //create element
                        var node2 = document.createElement("li");
                        var eventNameContainer2 = document.createElement("h3");
                        var eventDateContainer2 = document.createElement("p");
                        var eventStartTimeContainer2 = document.createElement("p");

                        var priceContainer2 = document.createElement("p");
                        var eventPriceMinContainer2 = document.createElement("span");
                        var eventPriceMaxContainer2 = document.createElement("span");
                        var eventPriceCurrencyContainer2 = document.createElement("span");


                        var eventUrlContainer2 = document.createElement("p");
                        var eventVenueAddressContainer2 = document.createElement("p");
                        var eventVenueNameContainer2 = document.createElement("p");

                        var eventName2 = document.createTextNode(element.name);
                        var eventDate2 = document.createTextNode(element.dates.start.localDate);
                        var eventStartTime2 = document.createTextNode(element.dates.start.localTime);
                        var eventPriceMin2 = document.createTextNode(element.priceRanges[0].min);
                        var eventPriceMax2 = document.createTextNode(element.priceRanges[0].max);
                        var eventPriceCurrency2 = document.createTextNode(element.priceRanges[0].currency);
                        var eventUrl2 = document.createTextNode(element.url);
                        var eventVenueAddress2 = document.createTextNode(element._embedded.venues[0].address.line1);
                        var eventVenueName2 = document.createTextNode(element._embedded.venues[0].name);
                      

                        //add CSS to element
                         node2.classList.add("listingLi");
                         eventDateContainer2.classList.add("listingDate");
                         eventStartTimeContainer2.classList.add("listingTime");
                         eventVenueAddressContainer2.classList.add("listingVenueAddress");
                         eventVenueNameContainer2.classList.add("listingVenueName");

                         priceContainer2.classList.add("listingPriceContainer");
                         eventPriceMaxContainer2.classList.add("listingPriceMax");
                         eventPriceCurrencyContainer2.classList.add("listingPriceCurrency");

                         
                        // append element into container

                        eventNameContainer2.appendChild(eventName2)
                        eventDateContainer2.appendChild(eventDate2);
                        eventStartTimeContainer2.appendChild(eventStartTime2);

                        eventPriceMinContainer2.appendChild(eventPriceMin2);
                        eventPriceMaxContainer2.appendChild(eventPriceMax2);
                        eventPriceCurrencyContainer2.appendChild(eventPriceCurrency2);

                        priceContainer2.appendChild(eventPriceMinContainer2);
                        priceContainer2.appendChild(eventPriceMaxContainer2);
                        priceContainer2.appendChild(eventPriceCurrencyContainer2);

                        eventUrlContainer2.appendChild(eventUrl2);
                        eventVenueAddressContainer2.appendChild(eventVenueAddress2);
                        eventVenueNameContainer2.appendChild(eventVenueName2);

                        /* create buttons */
                            var btn = document.createElement("button");
                            btn.innerHTML = '<i class="fa-regular fa-heart fa-xl" style="color:red;"></i>';
                            btn.classList.add("addBtn");
                            btn.onclick = function () {
                               btn.innerHTML = '<i class="fa-solid fa-heart fa-xl" style="color:red;"></i>';
                             
                           // alert("Name: " + eventNameContainer.innerHTML + "Date: " + eventDateContainer.innerHTML + "Time: " + eventStartTimeContainer.innerHTML);
                  
                                document.getElementById("FavouriteEventName").value = eventNameContainer2.innerHTML;
                                document.getElementById("FavouriteEventDate").value = eventDateContainer2.innerHTML;
                                document.getElementById("FavouriteEventTime").value = eventStartTimeContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceMin").value = eventPriceMinContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceMax").value = eventPriceMaxContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceCurrency").value = eventPriceCurrencyContainer2.innerHTML;
                                document.getElementById("FavouriteEventUrl").value = eventUrlContainer2.innerHTML;
                                document.getElementById("FavouriteEventVenue").value = priceContainer2.innerHTML;
                                var auto_refresh = setInterval(function() { submitform(); }, 2000);

                        };

                        //append element into node(li)
                        node2.appendChild(eventNameContainer2);
                        node2.appendChild(eventDateContainer2);
                        node2.appendChild(eventStartTimeContainer2);
                       
                  
                        node2.appendChild(priceContainer2);
                        node2.appendChild(eventVenueAddressContainer2);
                        node2.appendChild(eventVenueNameContainer2);
                        
                          node2.appendChild(eventUrlContainer2);
                        node2.appendChild(btn);


                        /****** insert li to ul(eventContainer) ******/
                        eventContainer2.appendChild(node2);

                        });
                    },
                    error: function (xhr, status, err) {
                        /* This time, we do not end up here!*/
                    }
                });

            });


            /*=====TICKETMASTER API (DEFAULT Tody event)===== */

            /*console.log(eventContainer); */
            var eventContainer = document.getElementById('eventContainer');
            var date = new Date();
            let today = date.toISOString().slice(0, 10);

            var followingDay = new Date(date.getTime() + 86400000); //add one day

            let tomrrow = followingDay.toISOString().slice(0, 10);

            var outputLat = 43.6532260;
            var outputLon = -79.3831843;

            $.ajax({
                type: "GET",
                url: "https://app.ticketmaster.com/discovery/v2/events?apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&size=10&radius=30&unit=km&latlong=" + outputLat + "," + outputLon + "&localStartEndDateTime=" + today + "T00:00:00," + tomrrow + "T00:00:00",
                async: true,
                dataType: "json",
                success: function (json) {
                    eventContainer.innerHTML = '';
                    console.log(json);

                    var array1 = json._embedded.events;


                    //make each events as an individual object

                    array1.forEach((element) => {

                        //push element.name into array
                        var individualArray = [element.name, parseFloat(element._embedded.venues[0].location.latitude), parseFloat(element._embedded.venues[0].location.longitude)];
                        eventPin.push(individualArray);


                        //get lat and lon for map pins
                        console.log("each event lat is: " + element._embedded.venues[0].location.latitude + " and lon is: " + element._embedded.venues[0].location.longitude);

                        //create element
                        var node = document.createElement("li");
                        var eventNameContainer = document.createElement("h3");
                        var eventDateContainer = document.createElement("p");
                        var eventStartTimeContainer = document.createElement("p");

                        var priceContainer = document.createElement("p");
                        var eventPriceMinContainer = document.createElement("span");
                        var eventPriceMaxContainer = document.createElement("span");
                        var eventPriceCurrencyContainer = document.createElement("span");


                        var eventUrlContainer = document.createElement("p");
                        var eventVenueAddressContainer = document.createElement("p");
                        var eventVenueNameContainer = document.createElement("p");

                        var eventName = document.createTextNode(element.name);
                        var eventDate = document.createTextNode(element.dates.start.localDate);
                        var eventStartTime = document.createTextNode(element.dates.start.localTime);
                        var eventPriceMin = document.createTextNode(element.priceRanges[0].min);
                        var eventPriceMax = document.createTextNode(element.priceRanges[0].max);
                        var eventPriceCurrency = document.createTextNode(element.priceRanges[0].currency);
                        var eventUrl = document.createTextNode(element.url);
                        var eventVenueAddress = document.createTextNode(element._embedded.venues[0].address.line1);
                        var eventVenueName = document.createTextNode(element._embedded.venues[0].name);
                        var eventImage = document.createTextNode(element.images[0].url);
                        console.log("image" + eventImage)

                        //add CSS to element
                         node.classList.add("listingLi");
                         eventDateContainer.classList.add("listingDate");
                         eventStartTimeContainer.classList.add("listingTime");
                         eventVenueAddressContainer.classList.add("listingVenueAddress");
                         eventVenueNameContainer.classList.add("listingVenueName");

                         priceContainer.classList.add("listingPriceContainer");
                         eventPriceMaxContainer.classList.add("listingPriceMax");
                         eventPriceCurrencyContainer.classList.add("listingPriceCurrency");

                         
                        // append element into container

                        eventNameContainer.appendChild(eventName)
                        eventDateContainer.appendChild(eventDate);
                        eventStartTimeContainer.appendChild(eventStartTime);

                        eventPriceMinContainer.appendChild(eventPriceMin);
                        eventPriceMaxContainer.appendChild(eventPriceMax);
                        eventPriceCurrencyContainer.appendChild(eventPriceCurrency);

                        priceContainer.appendChild(eventPriceMinContainer);
                        priceContainer.appendChild(eventPriceMaxContainer);
                        priceContainer.appendChild(eventPriceCurrencyContainer);

                        eventUrlContainer.appendChild(eventUrl);
                        eventVenueAddressContainer.appendChild(eventVenueAddress);
                        eventVenueNameContainer.appendChild(eventVenueName);

                        /* create buttons */
                            var btn = document.createElement("button");
                            btn.innerHTML = '<i class="fa-regular fa-heart fa-xl" style="color:red;"></i>';
                            btn.classList.add("addBtn");
                            btn.onclick = function () {
                               btn.innerHTML = '<i class="fa-solid fa-heart fa-xl" style="color:red;"></i>';
                             
                           // alert("Name: " + eventNameContainer.innerHTML + "Date: " + eventDateContainer.innerHTML + "Time: " + eventStartTimeContainer.innerHTML);
                  
                                document.getElementById("FavouriteEventName").value = eventNameContainer.innerHTML;
                                document.getElementById("FavouriteEventDate").value = eventDateContainer.innerHTML;
                                document.getElementById("FavouriteEventTime").value = eventStartTimeContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMin").value = eventPriceMinContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMax").value = eventPriceMaxContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceCurrency").value = eventPriceCurrencyContainer.innerHTML;
                                document.getElementById("FavouriteEventUrl").value = eventUrlContainer.innerHTML;
                                document.getElementById("FavouriteEventVenue").value = priceContainer.innerHTML;
                                var auto_refresh = setInterval(function() { submitform(); }, 2000);

                        };

                        //append element into node(li)
                        node.appendChild(eventNameContainer);
                        node.appendChild(eventDateContainer);
                        node.appendChild(eventStartTimeContainer);
                       
                  
                        node.appendChild(priceContainer);
                        node.appendChild(eventVenueAddressContainer);
                        node.appendChild(eventVenueNameContainer);
                        
                          node.appendChild(eventUrlContainer);
                        node.appendChild(btn);


                        /****** insert li to ul(eventContainer) ******/
                        eventContainer.appendChild(node);



                        /******  Get the obeject to string for infowindow ******/
                        const getEventName = JSON.stringify(element.name).replace(/"/g, '');
                        const getEventVanue = JSON.stringify(element._embedded.venues[0].name).replace(/"/g, '');
                        const geteventDate = JSON.stringify(element.dates.start.localDate).replace(/"/g, '');
                        const getEventTime = JSON.stringify(element.dates.start.localTime).replace(/"/g, '');
                        const getEventAddress = JSON.stringify(element._embedded.venues[0].address.line1).replace(/"/g, '');
                        const getEventImage = JSON.stringify(element.images[0].url).replace(/"/g, '');


                        var contentString = '<img src="' + getEventImage + '" width="100%"/>' + '<br><strong>' + getEventName + '</strong><br>' + getEventVanue + '<br>' + getEventAddress + '<br>' + geteventDate + ' ' + getEventTime 


                        // Shapes define the clickable region of the icon. The type defines an HTML
                        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
                        // The final coordinate closes the poly by connecting to the first coordinate.


                        var shape = {
                            coords: [1, 1, 1, 20, 18, 20, 18, 1],
                            type: "poly",
                        };

                        var event = individualArray;
                        //var infowindow = new google.maps.InfoWindow({
                        //    content: contentString,
                        //    maxWidth: 200,
                        //});



                        var eventMarker = new google.maps.Marker({
                            position: { lat: event[1], lng: event[2] },
                            map: map,
                            icon: image,
                            shape: shape,
                            //title: event[0],
                            //zIndex: event[3],
                        });
                        /****** Marker listener to open info window ******/
                        eventMarker.addListener("click", function () {
                            infowindow.close();
                            infowindow.setContent(contentString);
                            infowindow.open({
                                anchor: eventMarker,
                                map: map,
                                shouldFocus: false,
                            });
                        });

                    });
                },
                error: function (xhr, status, err) {
                    /* This time, we do not end up here!*/
                }
            });

               /*=====TICKETMASTER API (default this week)===== */
            var eventContainer2 = document.getElementById('eventContainer2');
            var date2 = new Date();
            let today2 = date2.toISOString().slice(0, 10);
            var addOneWeek = new Date(date2.getTime() + 604800000); //add 30 days

            let eventInAWeek = addOneWeek.toISOString().slice(0, 10);

            var outputLat = 43.6532260;
            var outputLon = -79.3831843;

            $.ajax({
                type: "GET",
                url: "https://app.ticketmaster.com/discovery/v2/events?apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&size=10&radius=30&unit=km&latlong=" + outputLat + "," + outputLon + "&localStartEndDateTime=" + today2 + "T00:00:00," + eventInAWeek + "T00:00:00",
                async: true,
                dataType: "json",
                success: function (json) {
                    eventContainer2.innerHTML = '';


                    var array1 = json._embedded.events;

                    //make each events as an individual object

                    array1.forEach((element) => {

                        //push element.name into array
                        var individualArray = [element.name, parseFloat(element._embedded.venues[0].location.latitude), parseFloat(element._embedded.venues[0].location.longitude)];
                        eventPin.push(individualArray);


                        //get lat and lon for map pins
                        console.log("each event lat is: " + element._embedded.venues[0].location.latitude + " and lon is: " + element._embedded.venues[0].location.longitude);

                        //create element
                        var node2 = document.createElement("li");
                        var eventNameContainer2 = document.createElement("h3");
                        var eventDateContainer2 = document.createElement("p");
                        var eventStartTimeContainer2 = document.createElement("p");

                        var priceContainer2 = document.createElement("p");
                        var eventPriceMinContainer2 = document.createElement("span");
                        var eventPriceMaxContainer2 = document.createElement("span");
                        var eventPriceCurrencyContainer2 = document.createElement("span");


                        var eventUrlContainer2 = document.createElement("p");
                        var eventVenueAddressContainer2 = document.createElement("p");
                        var eventVenueNameContainer2 = document.createElement("p");

                        var eventName2 = document.createTextNode(element.name);
                        var eventDate2 = document.createTextNode(element.dates.start.localDate);
                        var eventStartTime2 = document.createTextNode(element.dates.start.localTime);
                        var eventPriceMin2 = document.createTextNode(element.priceRanges[0].min);
                        var eventPriceMax2 = document.createTextNode(element.priceRanges[0].max);
                        var eventPriceCurrency2 = document.createTextNode(element.priceRanges[0].currency);
                        var eventUrl2 = document.createTextNode(element.url);
                        var eventVenueAddress2 = document.createTextNode(element._embedded.venues[0].address.line1);
                        var eventVenueName2 = document.createTextNode(element._embedded.venues[0].name);
                      

                        //add CSS to element
                         node2.classList.add("listingLi");
                         eventDateContainer2.classList.add("listingDate");
                         eventStartTimeContainer2.classList.add("listingTime");
                         eventVenueAddressContainer2.classList.add("listingVenueAddress");
                         eventVenueNameContainer2.classList.add("listingVenueName");

                         priceContainer2.classList.add("listingPriceContainer");
                         eventPriceMaxContainer2.classList.add("listingPriceMax");
                         eventPriceCurrencyContainer2.classList.add("listingPriceCurrency");

                         
                        // append element into container

                        eventNameContainer2.appendChild(eventName2)
                        eventDateContainer2.appendChild(eventDate2);
                        eventStartTimeContainer2.appendChild(eventStartTime2);

                        eventPriceMinContainer2.appendChild(eventPriceMin2);
                        eventPriceMaxContainer2.appendChild(eventPriceMax2);
                        eventPriceCurrencyContainer2.appendChild(eventPriceCurrency2);

                        priceContainer2.appendChild(eventPriceMinContainer2);
                        priceContainer2.appendChild(eventPriceMaxContainer2);
                        priceContainer2.appendChild(eventPriceCurrencyContainer2);

                        eventUrlContainer2.appendChild(eventUrl2);
                        eventVenueAddressContainer2.appendChild(eventVenueAddress2);
                        eventVenueNameContainer2.appendChild(eventVenueName2);

                        /* create buttons */
                            var btn = document.createElement("button");
                            btn.innerHTML = '<i class="fa-regular fa-heart fa-xl" style="color:red;"></i>';
                            btn.classList.add("addBtn");
                            btn.onclick = function () {
                               btn.innerHTML = '<i class="fa-solid fa-heart fa-xl" style="color:red;"></i>';
                             
                           // alert("Name: " + eventNameContainer.innerHTML + "Date: " + eventDateContainer.innerHTML + "Time: " + eventStartTimeContainer.innerHTML);
                  
                                document.getElementById("FavouriteEventName").value = eventNameContainer2.innerHTML;
                                document.getElementById("FavouriteEventDate").value = eventDateContainer2.innerHTML;
                                document.getElementById("FavouriteEventTime").value = eventStartTimeContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceMin").value = eventPriceMinContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceMax").value = eventPriceMaxContainer2.innerHTML;
                                document.getElementById("FavouriteEventPriceCurrency").value = eventPriceCurrencyContainer2.innerHTML;
                                document.getElementById("FavouriteEventUrl").value = eventUrlContainer2.innerHTML;
                                document.getElementById("FavouriteEventVenue").value = priceContainer2.innerHTML;
                                var auto_refresh = setInterval(function() { submitform(); }, 2000);

                        };

                        //append element into node(li)
                        node2.appendChild(eventNameContainer2);
                        node2.appendChild(eventDateContainer2);
                        node2.appendChild(eventStartTimeContainer2);
                       
                  
                        node2.appendChild(priceContainer2);
                        node2.appendChild(eventVenueAddressContainer2);
                        node2.appendChild(eventVenueNameContainer2);
                        
                          node2.appendChild(eventUrlContainer2);
                        node2.appendChild(btn);


                        /****** insert li to ul(eventContainer) ******/
                        eventContainer2.appendChild(node2);
                       
                     
                    });
                },
                error: function (xhr, status, err) {
                    /* This time, we do not end up here!*/
                }
            });



            /****** to get current location ******/

            var locationButton = document.createElement("button");
            var currentMarker = new google.maps.Marker({
                map: map,
                shouldFocus: true
                //anchorPoint: new google.maps.Point(0, 71)
            });

            locationButton.textContent = "Pan to Current Location";
            locationButton.classList.add("custom-map-control-button");
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
            locationButton.addEventListener("click", () => {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };
                            currentMarker.setPosition(pos);
                            currentMarker.setVisible(true);
                            infowindow.setPosition(pos);
                            infowindow.setContent("Location found.");
                            infowindow.open(map, currentMarker);
                            map.setCenter(pos);
                            console.log(pos)
                            console.log(pos.lat)
                            console.log(pos.lng)

                            /*=====TICKETMASTER API (Default Tody event)===== */

                            /*console.log(eventContainer); */

                            var eventContainer = document.getElementById('eventContainer');
                            var date = new Date();
                            let today = date.toISOString().slice(0, 10);

                            var followingDay = new Date(date.getTime() + 86400000); //add one day

                            let tomrrow = followingDay.toISOString().slice(0, 10);

                            $.ajax({
                                type: "GET",
                                url: "https://app.ticketmaster.com/discovery/v2/events?apikey=lgfgprr49bNDRJoqaBD62452TUPhbkEw&size=10&radius=30&unit=km&latlong=" + pos.lat + "," + pos.lng + "&localStartEndDateTime=" + today + "T00:00:00," + tomrrow + "T00:00:00",
                                async: true,
                                dataType: "json",
                                success: function (json) {
                                    eventContainer.innerHTML = '';
                                    console.log(json);

                                    var array1 = json._embedded.events;


                                    //make each events as an individual object

                                    array1.forEach((element) => {

                                        //push element.name into array
                                        var individualArray = [element.name, parseFloat(element._embedded.venues[0].location.latitude), parseFloat(element._embedded.venues[0].location.longitude)];
                                        eventPin.push(individualArray);


                                        //get lat and lon for map pins
                                        console.log("each event lat is: " + element._embedded.venues[0].location.latitude + " and lon is: " + element._embedded.venues[0].location.longitude);

                                      //create element
                        var node = document.createElement("li");
                        var eventNameContainer = document.createElement("h3");
                        var eventDateContainer = document.createElement("p");
                        var eventStartTimeContainer = document.createElement("p");
                        var eventPriceMinContainer = document.createElement("p");
                        var eventPriceMaxContainer = document.createElement("p");
                        var eventPriceCurrencyContainer = document.createElement("p");
                        var eventUrlContainer = document.createElement("p");
                        var eventVenueContainer = document.createElement("p");

                        var eventName = document.createTextNode(element.name);
                        var eventDate = document.createTextNode(element.dates.start.localDate);
                        var eventStartTime = document.createTextNode(element.dates.start.localTime);
                        var eventPriceMin = document.createTextNode(element.priceRanges[0].min);
                        var eventPriceMax = document.createTextNode(element.priceRanges[0].max);
                        var eventPriceCurrency = document.createTextNode(element.priceRanges[0].currency);
                        var eventUrl = document.createTextNode(element.url);
                        var eventVenueAddress = document.createTextNode(element._embedded.venues[0].address.line1);
                        var eventVenueName = document.createTextNode(element._embedded.venues[0].name);
                        var eventImage = document.createTextNode(element.images[0].url);
                        console.log("image" + eventImage)

               
                      

                        // append element into container

                        eventNameContainer.appendChild(eventName)
                        eventDateContainer.appendChild(eventDate);
                        eventStartTimeContainer.appendChild(eventStartTime);
                        eventPriceMinContainer.appendChild(eventPriceMin);
                        eventPriceMaxContainer.appendChild(eventPriceMax);
                        eventPriceCurrencyContainer.appendChild(eventPriceCurrency);
                        eventUrlContainer.appendChild(eventUrl);
                        eventVenueContainer.appendChild(eventVenueAddress);
                        eventVenueContainer.appendChild(eventVenueName);

                        /* create buttons */
                            var btn = document.createElement("button");
                            btn.innerHTML = '<i class="fa-regular fa-heart fa-xl" style="color:red;"></i>';
                            btn.classList.add("addBtn");
                            btn.onclick = function () {
                               btn.innerHTML = '<i class="fa-solid fa-heart fa-xl" style="color:red;"></i>';
                             
                           // alert("Name: " + eventNameContainer.innerHTML + "Date: " + eventDateContainer.innerHTML + "Time: " + eventStartTimeContainer.innerHTML);
                  
                                document.getElementById("FavouriteEventName").value = eventNameContainer.innerHTML;
                                document.getElementById("FavouriteEventDate").value = eventDateContainer.innerHTML;
                                document.getElementById("FavouriteEventTime").value = eventStartTimeContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMin").value = eventPriceMinContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceMax").value = eventPriceMaxContainer.innerHTML;
                                document.getElementById("FavouriteEventPriceCurrency").value = eventPriceCurrencyContainer.innerHTML;
                                document.getElementById("FavouriteEventUrl").value = eventUrlContainer.innerHTML;
                                document.getElementById("FavouriteEventVenue").value = eventVenueContainer.innerHTML;
                                var auto_refresh = setInterval(function() { submitform(); }, 2000);

                        };

                        //append element into node(li)
                        node.appendChild(eventNameContainer);
                        node.appendChild(eventDateContainer);
                        node.appendChild(eventStartTimeContainer);
                        node.appendChild(eventPriceMinContainer);
                        node.appendChild(eventPriceMaxContainer);
                        node.appendChild(eventPriceCurrencyContainer);
                        node.appendChild(eventUrlContainer);
                        node.appendChild(eventVenueContainer);
                        node.appendChild(btn);


                        /****** insert li to ul(eventContainer) ******/
                        eventContainer.appendChild(node);
                       
                        
                         


                                        /******  Get the obeject to string for infowindow ******/
                                        const getEventName = JSON.stringify(element.name).replace(/"/g, '');
                                        const getEventVanue = JSON.stringify(element._embedded.venues[0].name).replace(/"/g, '');
                                        const geteventDate = JSON.stringify(element.dates.start.localDate).replace(/"/g, '');
                                        const getEventTime = JSON.stringify(element.dates.start.localTime).replace(/"/g, '');
                                        const getEventAddress = JSON.stringify(element._embedded.venues[0].address.line1).replace(/"/g, '');
                                        const getEventImage = JSON.stringify(element.images[0].url).replace(/"/g, '');


                                        var contentString = '<img src="' + getEventImage + '" width="100%"/>' + '<br><strong>' + getEventName + '</strong><br>' + getEventVanue + '<br>' + getEventAddress + '<br>' + geteventDate + ' ' + getEventTime

                                        // Shapes define the clickable region of the icon. The type defines an HTML
                                        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
                                        // The final coordinate closes the poly by connecting to the first coordinate.


                                        var shape = {
                                            coords: [1, 1, 1, 20, 18, 20, 18, 1],
                                            type: "poly",
                                        };

                                        var event = individualArray;
                                        //var infowindow = new google.maps.InfoWindow({
                                        //    content: contentString,
                                        //    maxWidth: 200,
                                        //});



                                        var eventMarker = new google.maps.Marker({
                                            position: { lat: event[1], lng: event[2] },
                                            map: map,
                                            icon: image,
                                            shape: shape,
                                            //title: event[0],
                                            //zIndex: event[3],
                                        });
                                        /****** Marker listener to open info window ******/
                                        eventMarker.addListener("click", function () {
                                            infowindow.close();
                                            infowindow.setContent(contentString);
                                            infowindow.open({
                                                anchor: eventMarker,
                                                map: map,
                                                shouldFocus: false,
                                            });
                                        });

                                    });
                                },
                                error: function (xhr, status, err) {
                                    /* This time, we do not end up here!*/
                                }
                            });

                        },
                         
                        () => {
                            handleLocationError(true, infowindow, map.getCenter());
                        }
                    );
                } else {
                    handleLocationError(false, infowindow, map.getCenter());
                }
            });
        }
        console.log(eventPin);


        function handleLocationError(browserHasGeolocation, infowindow, pos) {
            infowindow.setPosition(pos);
            infowindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
            infowindow.open(map);
        }
        window.initMap = initMap;

       

        function submitform()
        {
           document.getElementById("myForm").submit();
            document.getElementById("FavouriteEventName").value = "";
                                document.getElementById("FavouriteEventDate").value = "";
                                document.getElementById("FavouriteEventTime").value = "";

                                 document.getElementById("FavouriteEventPriceMin").value = "";
                                document.getElementById("FavouriteEventPriceMax").value = "";
                                document.getElementById("FavouriteEventPriceCurrency").value = "";

                                 document.getElementById("FavouriteEventUrl").value = "";
                                document.getElementById("FavouriteEventVenue").value = "";

        }
    </script>

</head>
<body>
    <div class="app">
        <div class="map-wrapper">
            <!-- Search input -->
                <div class="row">
                    <div class="col-md-7 mx-auto">
                        <div class="input-group search-wrapper">
                            <input class="form-control border-end-0 border rounded-pill controls" type="text" id="searchInput" placeholder="Enter a location">  
                            <i class="fa fa-search"></i>
                        </div>
                    </div>
                </div>
            <!-- Google map -->
            <div id="mapdiv">
                <span id="map"></span>
            </div>

        </div>
        <!-- Display geolocation data -->
        <div>
            <ul class="geo-data">
                <li>Full Address: <span id="location"></span></li>
                <li>Postal Code: <span id="postal_code"></span></li>
                <li>Country: <span id="country"></span></li>
                <li>Latitude: <span id="lat"></span></li>
                <li>Longitude: <span id="lon"></span></li>
            </ul>
        </div>
    </div>

    <div class="adding">
    <h1>Create</h1>

    <h4>FavouriteEvent</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
           <form asp-action="Create" name="myForm" id="myForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FavouriteEventName" class="control-label"></label>
                <input asp-for="FavouriteEventName" class="form-control" />
                <span asp-validation-for="FavouriteEventName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventDate" class="control-label"></label>
                <input asp-for="FavouriteEventDate" class="form-control" />
                <span asp-validation-for="FavouriteEventDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventTime" class="control-label"></label>
                <input asp-for="FavouriteEventTime" class="form-control" />
                <span asp-validation-for="FavouriteEventTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventPriceMin" class="control-label"></label>
                <input asp-for="FavouriteEventPriceMin" class="form-control" />
                <span asp-validation-for="FavouriteEventPriceMin" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventPriceMax" class="control-label"></label>
                <input asp-for="FavouriteEventPriceMax" class="form-control" />
                <span asp-validation-for="FavouriteEventPriceMax" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventPriceCurrency" class="control-label"></label>
                <input asp-for="FavouriteEventPriceCurrency" class="form-control" />
                <span asp-validation-for="FavouriteEventPriceCurrency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventUrl" class="control-label"></label>
                <input asp-for="FavouriteEventUrl" class="form-control" />
                <span asp-validation-for="FavouriteEventUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FavouriteEventVenue" class="control-label"></label>
                <input asp-for="FavouriteEventVenue" class="form-control" />
                <span asp-validation-for="FavouriteEventVenue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
</div>
    <!--TicketMaster data-->
    <div class="ticketmaster container-fluid">
        <h2>Today events:</h2>
        <ul id="eventContainer">
        </ul>
    </div>

    <div>
        <h2>This week events:</h2>
        <ul id="eventContainer2">
        </ul>
    </div>


</body>
</html>

@section Styles
{
    <style type="text/css">

        .adding{
            margin-top: 600px;
            display:none;
        }

        #map {
            display: block;
            position: absolute;
            height: 60%;
            width: 75%;
       
            float: left;
        }
        
        #mapdiv {
            margin: auto;
            width: 50%;
        }

        #events {
            display: none;
        }
        /* * Optional: Makes the sample page fill the window */
  


        /******** SEARCH BAR **********/

        .search-wrapper {
            text-align: center;
        }

        .address {
            font-size: 22px;
            font-weight: bolder;
        }

        #searchInput {
            position: relative !important;
            width: 75%;
            height: 2em;
        }

       <!-- .container {
            height: 100%;
        }
        -->

        /*********** CURREN LOCATION BUTTON(google inner class) ***********/
        .custom-map-control-button {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            height: 40px;
            cursor: pointer;
        }

        .custom-map-control-button:hover {
            background: rgb(235, 235, 235);
        }

        .custom-map-control-button:hover {
            background: rgb(235, 235, 235);
        }

        .ticketmaster {
            margin-top: 700px;
        }

        .geo-data {
            display: none;
        }

        /*inforwindow overide width*/
        .gm-style-iw-d {
            max-width: 250px;
            max-height: 500px;
            font-size: 16px
        }

        /*Heart buttons*/
        .addBtn{
            background-color:transparent;
            border:none;
            position: absolute;
            top:10px;
            right:10px;

        }

        #eventContainer, #eventContainer2{
              list-style-type: none;
              margin: 0;
              padding: 0;
        }

        /*each event listing container*/
        .listingLi{
            background-color: white;
            border-radius: 20px;
            box-shadow: 0px 5px 10px grey;
            margin: 20px 0;
            padding:  10px 20px;
            position: relative; 
        }

        /*each event listing's date*/
        .listingDate{
            display:inline-block;
        }

        .listingDate::before{
           content: '📅';
        }

        /*each event listing's time*/
        .listingTime{
             display:inline-block;
             margin-left: 30px;
        }

        .listingTime::before{
            content: '🕖';
        }

         /*each event listing's venue address*/
         .listingVenueAddress,.listingVenueName{
            display:inline-block;
         }

         .listingVenueName{
             margin-left: 30px;
         }

        .listingVenueAddress::before{
            content: '📍';
        }
         /*each event listing's venue name*/
        .listingVenueName::before{
            content: '🏟️';
        }

          /*each event listing's Price*/
      
         .listingPriceContainer::before{
              content: '💰';
         }

         .listingPriceMax::before{
             content: ' - ';
         }
                        

    </style>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


